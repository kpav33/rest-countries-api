{"version":3,"sources":["GlobalStyle.style.js","components/Themes.style.js","components/Header.js","components/SearchBar.js","components/FilterByRegion.js","components/CountryCard.js","components/CountryCards.js","components/Main.js","components/Subpage.js","App.js","index.js"],"names":["GlobalStyles","createGlobalStyle","theme","textColor","background","darkTheme","elementsColor","inputColor","borderBottom","boxShadow","boxShadowHeader","lightTheme","HeaderStyled","styled","header","ThemeButton","button","Header","themeToggler","light","size","title","dark","onClick","StyledInput","input","SearchBarWrapper","div","SearchBar","handleChange","type","name","placeholder","value","onChange","FilterByRegion","handleChangeFilter","themeCurrentLight","colourStyles","control","styles","width","padding","borderRadius","border","fontFamily","fontWeight","marginTop","singleValue","provided","color","dropdownIndicator","base","menu","menuList","option","cursor","defaultStyles","options","label","components","IndicatorSeparator","CountryCardLink","Link","CountryCard","country","allCountries","subPageName","replace","toLowerCase","to","pathname","state","className","src","flag","alt","style","population","toLocaleString","region","capital","StyledSection","section","CountryCards","countriesArray","select","countries","filter","includes","string","toUpperCase","slice","map","index","length","StyledMain","main","StyledFiltersDiv","Main","useState","setInput","setCountriesArray","useEffect","fetch","then","response","json","data","catch","error","console","log","setSelect","event","target","SubpageSection","StyledLink","CountryContainer","BorderCountriesDiv","StyledLinkBorder","Subpage","useLocation","borderCountries","borders","arrayNames","find","element","alpha3Code","push","currencies","currency","languages","language","role","nativeName","subregion","topLevelDomain","join","App","setTheme","exact","path","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+MAeaA,EAAeC,YAAH,81BA0BR,qBAAGC,MAAkBC,aAChB,qBAAGD,MAAkBE,cCzC9BC,EAAY,CACvBF,UAAW,mBACXG,cAAe,qBACfF,WAAY,qBACZG,WAAY,mBACZC,aAAc,OACdC,UAAW,OACXC,gBAAiB,QAINC,EAAa,CACxBR,UAAW,oBACXG,cAAe,mBACfF,WAAY,kBACZG,WAAY,kBACZC,aAAc,4BACdC,UAAW,6CACXC,gBAAiB,wB,sBCenB,I,IAAME,EAAeC,IAAOC,OAAV,oXAKF,qBAAGZ,MAAkBI,iBACrB,qBAAGJ,MAAkBQ,mBAe/BK,EAAcF,IAAOG,OAAV,6ZAUN,qBAAGd,MAAkBC,aAId,qBAAGD,MAAkBE,cAUxBa,EAzEf,YAA0C,IAAxBf,EAAuB,EAAvBA,MAAOgB,EAAgB,EAAhBA,aACjBC,EACJ,qCACE,cAAC,IAAD,CAAeC,KAAK,OAAOC,MAAM,SADnC,gBAKIC,EACJ,qCACE,cAAC,IAAD,CAAaF,KAAK,OAAOC,MAAM,UADjC,iBAKF,OACE,eAACT,EAAD,WACE,qDACA,cAACG,EAAD,CAAaQ,QAASL,EAAtB,SACa,UAAVhB,EAAoBiB,EAAQG,Q,QCErC,IAAME,EAAcX,IAAOY,MAAV,kqBAMN,qBAAGvB,MAAkBK,cAChB,qBAAGL,MAAkBI,iBAErB,qBAAGJ,MAAkBO,aAGxB,qBAAGP,MAAkBK,cAMrB,qBAAGL,MAAkBK,cAIrB,qBAAGL,MAAkBK,cAIrB,qBAAGL,MAAkBK,cAIrB,qBAAGL,MAAkBK,cAQ5BmB,EAAmBb,IAAOc,IAAV,4SAYV,qBAAGzB,MAAkBK,cAQlBqB,EA9Ef,YAA6C,IAAxBH,EAAuB,EAAvBA,MAAOI,EAAgB,EAAhBA,aAC1B,OACE,eAACH,EAAD,WACE,cAACF,EAAD,CACEM,KAAK,OACLC,KAAK,cACLC,YAAY,0BACZC,MAAOR,EACPS,SAAUL,IAEZ,cAAC,IAAD,CAAiBT,KAAK,a,eC6Hbe,I,EAAAA,EAvIf,YAAwD,IAA9BC,EAA6B,EAA7BA,mBAYpBC,EAA8B,UAZmB,EAATnC,MActCoC,EAAe,CACnBC,QAAS,SAACC,GAAD,mBAAC,eACLA,GADI,IAEPC,MAAO,QACPC,QAAS,SACTC,aAAc,MACdC,OAAQ,OACRC,WAAY,0BACZzC,WAAYiC,EAAoB,mBAAqB,qBACrDS,WAAY,MACZrC,UAAW4B,EACP,4CACA,OACJU,UAAW,OACX,4CAA6C,CAC3CA,UAAW,QAGfC,YAAa,SAACC,GAAD,mBAAC,eACTA,GADQ,IAEXC,MAAOb,EAAoB,oBAAsB,sBAEnDc,kBAAmB,SAACC,GAAD,mBAAC,eACfA,GADc,IAEjBF,MAAOb,EAAoB,oBAAsB,mBACjD,UAAW,CACTa,MAAOb,EAAoB,oBAAsB,uBAGrDgB,KAAM,SAACD,GAAD,mBAAC,eACFA,GADC,IAGJL,UAAW,MACX3C,WAAYiC,EAAoB,mBAAqB,qBACrDI,MAAO,QACP,4CAA6C,CAC3CA,MAAO,WAGXa,SAAU,SAACF,GAAD,mBAAC,eACNA,GADK,IAGRV,QAAS,EACTC,aAAc,SAEhBY,OAAQ,SAACf,GACP,OAAO,2BACFA,GADL,IAEEK,WAAY,0BACZK,MAAOb,EAAoB,oBAAsB,mBACjDjC,WAAYiC,EACR,mBACA,qBACJS,WAAY,MACZU,OAAQ,UACR,UAAW,CACTpD,WAAYiC,EACR,kBACA,yBAIVL,YAAa,SAACyB,GACZ,OAAO,2BACFA,GADL,IAEEP,MAAOb,EAAoB,oBAAsB,uBAKvD,OACE,mCAcE,cAAC,IAAD,CACEqB,QAlGU,CACd,CAAEzB,MAAO,SAAU0B,MAAO,UAC1B,CAAE1B,MAAO,WAAY0B,MAAO,YAC5B,CAAE1B,MAAO,OAAQ0B,MAAO,QACxB,CAAE1B,MAAO,SAAU0B,MAAO,UAC1B,CAAE1B,MAAO,UAAW0B,MAAO,WAC3B,CAAE1B,MAAO,QAAS0B,MAAO,UA6FrBnB,OAAQF,EACRJ,SAAUE,EACVJ,YAAY,mBACZ4B,WAAY,CACVC,mBAAoB,kBAAM,YClEpC,I,EAAMC,EAAkBjD,YAAOkD,IAAPlD,CAAH,wgCAEL,qBAAGX,MAAkBI,iBACrB,qBAAGJ,MAAkBO,aAO1B,qBAAGP,MAAkBC,aAkBX,qBAAGD,MAAkBM,gBA+B3BwD,EAlGf,YAAiD,IAA1BC,EAAyB,EAAzBA,QAASC,EAAgB,EAAhBA,aAE1BC,EAAcF,EAAQlC,KAG1B,OAFAoC,EAAcA,EAAYC,QAAQ,OAAQ,KAAKC,cAG7C,eAACP,EAAD,CACEQ,GAAI,CACFC,SAAS,+BAAD,OAAiCJ,GACzCK,MAAO,CAACP,EAASC,IAHrB,UAME,qBAAKO,UAAU,MAAf,SACE,qBAAKC,IAAKT,EAAQU,KAAMC,IAAG,UAAKX,EAAQlC,KAAb,aAE7B,sBAAK0C,UAAU,WAAf,UACE,6BAAKR,EAAQlC,OACb,8BACE,sBAAM8C,MAAO,CAAE/B,WAAY,OAA3B,0BACCmB,EAAQa,WAAWC,oBAEtB,8BACE,sBAAMF,MAAO,CAAE/B,WAAY,OAA3B,sBACCmB,EAAQe,UAEX,8BACE,sBAAMH,MAAO,CAAE/B,WAAY,OAA3B,uBACCmB,EAAQgB,kBCUnB,I,IAAMC,EAAgBrE,IAAOsE,QAAV,8NAWJC,EA/Cf,YAA0D,IAAlCC,EAAiC,EAAjCA,eAAgB5D,EAAiB,EAAjBA,MAAO6D,EAAU,EAAVA,OAOvCC,EAAYF,EACfG,QAAO,SAACvB,GACP,MAAe,UAAXqB,EAA2BrB,EAC3BqB,EAAerB,EAAQe,SAAWM,EAC1BrB,KAEbuB,QAAO,SAACvB,GACP,OAAIxC,EAAcwC,EAAQlC,KAAK0D,UAZfC,EAYmCjE,GAXvC,GAAGkE,cAAgBD,EAAOE,MAAM,GAAGvB,eAYnCJ,EAbhB,IAAoByB,KAejBG,KAAI,SAAC5B,EAAS6B,GAAV,OACH,cAAC,EAAD,CAEE7B,QAASA,EACTC,aAAcmB,GAFTS,MAMX,OACE,cAACZ,EAAD,UAAgBG,EAAeU,OAAS,GAAKR,KCgCjD,I,UAAMS,EAAanF,IAAOoF,KAAV,6HAQVC,EAAmBrF,IAAOc,IAAV,+OAYPwE,EA5Ef,YAA0B,IAAVjG,EAAS,EAATA,MAAS,EAEGkG,mBAAS,IAFZ,mBAEhB3E,EAFgB,KAET4E,EAFS,OAUqBD,mBAAS,IAV9B,mBAUhBf,EAVgB,KAUAiB,EAVA,KAYvBC,qBAAU,WACRC,MAAM,wCACHC,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACG,GACLN,EAAkBM,MAEnBC,OAAM,SAACC,GACNC,QAAQC,IAAIF,QAEf,IArBoB,MAwBKV,mBAAS,IAxBd,mBAwBhBd,EAxBgB,KAwBR2B,EAxBQ,KAqCvB,OACE,eAACjB,EAAD,WACE,eAACE,EAAD,WACE,cAAC,EAAD,CAAWzE,MAAOA,EAAOI,aApC/B,SAAsBqF,GAAQ,IACpBjF,EAAUiF,EAAMC,OAAhBlF,MACRoE,EAASpE,MAmCL,cAAC,EAAD,CAAgBG,mBARtB,SAA4BH,GAC1BgF,EAAUhF,EAAM0B,QAO4CzD,MAAOA,OAEjE,cAAC,EAAD,CACEmF,eAAgBA,EAChB5D,MAAOA,EACP6D,OAAQA,Q,QCsDhB,IAAM8B,EAAiBvG,IAAOsE,QAAV,4IAQdkC,EAAaxG,YAAOkD,IAAPlD,CAAH,4YAGL,qBAAGX,MAAkBC,aAChB,qBAAGD,MAAkBI,iBAoB/BgH,EAAmBzG,IAAOc,IAAV,2uBA2ChB4F,EAAqB1G,IAAOc,IAAV,kEAKlB6F,EAAmB3G,YAAOkD,IAAPlD,CAAH,sPAGX,qBAAGX,MAAkBC,aAChB,qBAAGD,MAAkBI,iBAatBmH,GAvMf,WAAmB,IAETjD,EAAUkD,cAAVlD,MAFS,cAIiBA,EAJjB,GAIVP,EAJU,KAIDoB,EAJC,KAKXsC,EAAkB1D,EAAQ2D,QAI5BC,EAAa,GACjBxC,EAAeQ,KAAI,SAAC5B,GAOlB,OANmB0D,EAAgBG,MACjC,SAACC,GAAD,OAAaA,IAAY9D,EAAQ+D,eAGjCH,EAAWI,KAAKhE,GAEX,QAIT,IAAMiE,EAAajE,EAAQiE,WAAWrC,KAAI,SAACsC,GAAD,OAAcA,EAASpG,QAE3DqG,EAAYnE,EAAQmE,UAAUvC,KAAI,SAACwC,GAAD,OAAcA,EAAStG,QAE/D,OACE,eAACqF,EAAD,WACE,eAACC,EAAD,CAAYiB,KAAK,SAAShE,GAAG,sBAA7B,UACE,cAAC,IAAD,CAAqBlD,KAAK,SAD5B,UAIA,eAACkG,EAAD,WACE,qBAAK7C,UAAU,MAAf,SACE,qBAAKC,IAAKT,EAAQU,KAAMC,IAAG,UAAKX,EAAQlC,KAAb,aAE7B,sBAAK0C,UAAU,UAAf,UACE,6BAAKR,EAAQlC,OACb,sBAAK0C,UAAU,cAAf,UACE,sBAAKA,UAAU,OAAf,UACE,8BACE,sBAAMI,MAAO,CAAE/B,WAAY,OAA3B,2BACCmB,EAAQsE,cAEX,8BACE,sBAAM1D,MAAO,CAAE/B,WAAY,OAA3B,0BACCmB,EAAQa,WAAWC,oBAEtB,8BACE,sBAAMF,MAAO,CAAE/B,WAAY,OAA3B,sBACCmB,EAAQe,UAEX,8BACE,sBAAMH,MAAO,CAAE/B,WAAY,OAA3B,0BACCmB,EAAQuE,aAEX,8BACE,sBAAM3D,MAAO,CAAE/B,WAAY,OAA3B,uBACCmB,EAAQgB,cAGb,sBAAKR,UAAU,QAAf,UACE,8BACE,sBAAMI,MAAO,CAAE/B,WAAY,OAA3B,gCACCmB,EAAQwE,eAAeC,KAAK,SAE/B,8BACE,sBAAM7D,MAAO,CAAE/B,WAAY,OAA3B,0BACCoF,EAAWQ,KAAK,SAEnB,8BACE,sBAAM7D,MAAO,CAAE/B,WAAY,OAA3B,yBACCsF,EAAUM,KAAK,eAItB,gCACE,mDACA,cAACnB,EAAD,UACGM,EAAW9B,OAAS,EACjB8B,EAAWhC,KAAI,SAAC5B,EAAS6B,GAAV,OACb,cAAC0B,EAAD,CAEEc,KAAK,SACLhE,GAAI,CACFC,SAAS,+BAAD,OAAiCN,EAAQlC,KAC9CqC,QAAQ,OAAQ,KAChBC,eACHG,MAAO,CAACP,EAASoB,IAPrB,SAUGpB,EAAQlC,MATJ+D,MAYT,yCC5DH6C,OA7Bf,WAAe,MAEavC,mBAAS,SAFtB,mBAENlG,EAFM,KAEC0I,EAFD,KAQb,OACE,eAAC,IAAD,CAAe1I,MAAiB,UAAVA,EAAoBS,EAAaN,EAAvD,UACE,cAACL,EAAD,IACA,cAAC,EAAD,CAAQE,MAAOA,EAAOgB,aAP1B,WACE,OAA2B0H,EAAV,UAAV1I,EAA6B,OAAmB,YAOrD,eAAC,IAAD,WACE,cAAC,IAAD,CAAO2I,OAAK,EAACC,KAAM,CAAC,IAAK,uBAAzB,SACE,cAAC,EAAD,CAAM5I,MAAOA,MAEf,cAAC,IAAD,CACE4I,KAAM,CACJ,2CACA,yBAHJ,SAME,cAAC,GAAD,aCzBVC,IAASC,OACP,cAAC,IAAD,UACE,cAAC,IAAMC,WAAP,UACE,cAAC,GAAD,QAGJC,SAASC,eAAe,W","file":"static/js/main.7a55a34a.chunk.js","sourcesContent":["import { createGlobalStyle } from \"styled-components\";\n\n/*\nThe designs were created to the following widths:\n- Mobile: 375px\n- Desktop: 1440px \n\n## Typography\n\n### Body Copy\n\n- Homepage Items: 14px\n- Detail Page: 16px \n*/\n\nexport const GlobalStyles = createGlobalStyle`\n    :root {\n        // Dark mode\n        --dark-mode-text: hsl(0, 0%, 100%);\n        --dark-mode-elements: hsl(209, 23%, 22%);\n        --dark-mode-background: hsl(207, 26%, 17%);\n        // Light mode\n        --light-mode-text: hsl(200, 15%, 8%);\n        --light-mode-input: hsl(0, 0%, 52%);\n        --light-mode-background: hsl(0, 0%, 94%);\n        --light-mode-elements: hsl(0, 0%, 100%);\n    }\n\n    *,\n    *:before,\n    *:after {\n        box-sizing: border-box;\n    }\n    html {\n        max-width: 1920px;\n        margin: 0 auto;\n    }\n\n    body {\n        margin: 0;\n        padding: 0;\n        color: ${({ theme }) => theme.textColor};\n        background: ${({ theme }) => theme.background};\n        font-size: 14px;\n        font-family: 'Nunito Sans', sans-serif;\n\n        @media only screen and (min-width: 768px) {\n            // To do\n        }\n    }\n\n`;\n","// Dark theme\nexport const darkTheme = {\n  textColor: \"hsl(0, 0%, 100%)\",\n  elementsColor: \"hsl(209, 23%, 22%)\",\n  background: \"hsl(207, 26%, 17%)\",\n  inputColor: \"hsl(0, 0%, 100%)\",\n  borderBottom: \"none\",\n  boxShadow: \"none\",\n  boxShadowHeader: \"none\",\n};\n\n// Light theme\nexport const lightTheme = {\n  textColor: \"hsl(200, 15%, 8%)\",\n  elementsColor: \"hsl(0, 0%, 100%)\",\n  background: \"hsl(0, 0%, 94%)\",\n  inputColor: \"hsl(0, 0%, 52%)\",\n  borderBottom: \"2px solid hsl(0, 0%, 92%)\",\n  boxShadow: \"rgba(100, 100, 111, 0.2) 0px 7px 29px 0px;\",\n  boxShadowHeader: \"0 2px 5px -2px gray;\",\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport { IoMoonOutline } from \"react-icons/io5\";\nimport { IoMoonSharp } from \"react-icons/io5\";\n\nfunction Header({ theme, themeToggler }) {\n  const light = (\n    <>\n      <IoMoonOutline size=\"14px\" title=\"dark\" /> Dark Mode\n    </>\n  );\n\n  const dark = (\n    <>\n      <IoMoonSharp size=\"14px\" title=\"light\" /> Light Mode\n    </>\n  );\n\n  return (\n    <HeaderStyled>\n      <h1>Where in the world?</h1>\n      <ThemeButton onClick={themeToggler}>\n        {theme === \"light\" ? light : dark}\n      </ThemeButton>\n    </HeaderStyled>\n  );\n}\n\nHeader.propTypes = {\n  theme: PropTypes.string.isRequired,\n  themeToggler: PropTypes.func.isRequired,\n};\n\nconst HeaderStyled = styled.header`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  padding: 1.3rem 1rem;\n  background: ${({ theme }) => theme.elementsColor};\n  box-shadow: ${({ theme }) => theme.boxShadowHeader};\n\n  @media only screen and (min-width: 768px) {\n    padding: 0.5rem 4rem;\n  }\n\n  h1 {\n    font-size: 1rem;\n\n    @media only screen and (min-width: 768px) {\n      font-size: 1.2rem;\n    }\n  }\n`;\n\nconst ThemeButton = styled.button`\n  border: none;\n  background: none;\n  cursor: pointer;\n  font-size: 14px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  font-family: \"Nunito Sans\", sans-serif;\n  font-weight: 600;\n  color: ${({ theme }) => theme.textColor};\n  transition: 0.3s;\n\n  &:hover {\n    background: ${({ theme }) => theme.background};\n    border-radius: 5px;\n    padding: 0.5rem 1rem;\n  }\n\n  svg {\n    margin-right: 0.5rem;\n  }\n`;\n\nexport default Header;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport { AiOutlineSearch } from \"react-icons/ai\";\n\nfunction SearchBar({ input, handleChange }) {\n  return (\n    <SearchBarWrapper>\n      <StyledInput\n        type=\"text\"\n        name=\"searchInput\"\n        placeholder=\"Search for a country...\"\n        value={input}\n        onChange={handleChange}\n      />\n      <AiOutlineSearch size=\"24px\" />\n    </SearchBarWrapper>\n  );\n}\n\nSearchBar.propTypes = {\n  input: PropTypes.string.isRequired,\n  handleChange: PropTypes.func.isRequired,\n};\n\nconst StyledInput = styled.input`\n  width: 100%;\n  padding: 1rem 1rem 1rem 4rem;\n  border-radius: 5px;\n  border: none;\n  font-family: \"Nunito Sans\", sans-serif;\n  color: ${({ theme }) => theme.inputColor};\n  background: ${({ theme }) => theme.elementsColor};\n  font-weight: 300;\n  box-shadow: ${({ theme }) => theme.boxShadow};\n\n  &::placeholder {\n    color: ${({ theme }) => theme.inputColor};\n    font-weight: 600;\n  }\n\n  ::-webkit-input-placeholder {\n    /* Chrome/Opera/Safari */\n    color: ${({ theme }) => theme.inputColor};\n  }\n  ::-moz-placeholder {\n    /* Firefox 19+ */\n    color: ${({ theme }) => theme.inputColor};\n  }\n  :-moz-placeholder {\n    /* Firefox 18- */\n    color: ${({ theme }) => theme.inputColor};\n  }\n  :-ms-input-placeholder {\n    /* Edge/IE 10+ */\n    color: ${({ theme }) => theme.inputColor};\n  }\n\n  @media only screen and (min-width: 768px) {\n    width: 500px;\n  }\n`;\n\nconst SearchBarWrapper = styled.div`\n  position: relative;\n  fill: \"red\";\n\n  @media only screen and (min-width: 768px) {\n    // todo\n  }\n\n  svg {\n    position: absolute;\n    right: 85%;\n    top: 27%;\n    fill: ${({ theme }) => theme.inputColor};\n\n    @media only screen and (min-width: 768px) {\n      right: 90%;\n    }\n  }\n`;\n\nexport default SearchBar;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n// import styled from \"styled-components\";\nimport Select from \"react-select\";\n\nfunction FilterByRegion({ handleChangeFilter, theme }) {\n  // react-select possible options\n  const options = [\n    { value: \"Africa\", label: \"Africa\" },\n    { value: \"Americas\", label: \"Americas\" },\n    { value: \"Asia\", label: \"Asia\" },\n    { value: \"Europe\", label: \"Europe\" },\n    { value: \"Oceania\", label: \"Oceania\" },\n    { value: \"World\", label: \"World\" },\n  ];\n\n  // Custom styling for react-select\n  let themeCurrentLight = theme === \"light\";\n\n  const colourStyles = {\n    control: (styles) => ({\n      ...styles,\n      width: \"200px\",\n      padding: \"0.4rem\",\n      borderRadius: \"5px\",\n      border: \"none\",\n      fontFamily: \"Nunito Sans, sans-serif\",\n      background: themeCurrentLight ? \"hsl(0, 0%, 100%)\" : \"hsl(209, 23%, 22%)\",\n      fontWeight: \"600\",\n      boxShadow: themeCurrentLight\n        ? \"rgba(100, 100, 111, 0.2) 0px 7px 29px 0px\"\n        : \"none\",\n      marginTop: \"2rem\",\n      \"@media only screen and (min-width: 768px)\": {\n        marginTop: \"0\",\n      },\n    }),\n    singleValue: (provided) => ({\n      ...provided,\n      color: themeCurrentLight ? \"hsl(200, 15%, 8%)\" : \"hsl(0, 0%, 100%)\",\n    }),\n    dropdownIndicator: (base) => ({\n      ...base,\n      color: themeCurrentLight ? \"hsl(200, 15%, 8%)\" : \"hsl(0, 0%, 100%)\",\n      \"&:hover\": {\n        color: themeCurrentLight ? \"hsl(200, 15%, 8%)\" : \"hsl(0, 0%, 100%)\",\n      },\n    }),\n    menu: (base) => ({\n      ...base,\n      // kill the gap\n      marginTop: \"5px\",\n      background: themeCurrentLight ? \"hsl(0, 0%, 100%)\" : \"hsl(209, 23%, 22%)\",\n      width: \"200px\",\n      \"@media only screen and (min-width: 768px)\": {\n        width: \"100%\",\n      },\n    }),\n    menuList: (base) => ({\n      ...base,\n      // kill the white space on first and last option\n      padding: 0,\n      borderRadius: \"5px\",\n    }),\n    option: (styles) => {\n      return {\n        ...styles,\n        fontFamily: \"Nunito Sans, sans-serif\",\n        color: themeCurrentLight ? \"hsl(200, 15%, 8%)\" : \"hsl(0, 0%, 100%)\",\n        background: themeCurrentLight\n          ? \"hsl(0, 0%, 100%)\"\n          : \"hsl(209, 23%, 22%)\",\n        fontWeight: \"600\",\n        cursor: \"pointer\",\n        \"&:hover\": {\n          background: themeCurrentLight\n            ? \"hsl(0, 0%, 94%)\"\n            : \"hsl(207, 26%, 17%)\",\n        },\n      };\n    },\n    placeholder: (defaultStyles) => {\n      return {\n        ...defaultStyles,\n        color: themeCurrentLight ? \"hsl(200, 15%, 8%)\" : \"hsl(0, 0%, 100%)\",\n      };\n    },\n  };\n\n  return (\n    <>\n      {/* Replaced with React-Select\n      <StyledSelect\n        value={select}\n        onChange={handleFilterRegion}\n        name=\"filterByRegion\"\n      >\n        <option value=\"\">Filter By Region</option>\n        <option value=\"Africa\">Africa</option>\n        <option value=\"Americas\">Americas</option>\n        <option value=\"Asia\">Asia</option>\n        <option value=\"Europe\">Europe</option>\n        <option value=\"Oceania\">Oceania</option>\n      </StyledSelect>*/}\n      <Select\n        options={options}\n        styles={colourStyles}\n        onChange={handleChangeFilter}\n        placeholder=\"Filter by Region\"\n        components={{\n          IndicatorSeparator: () => null,\n        }}\n      />\n    </>\n  );\n}\n\nFilterByRegion.propTypes = {\n  handleChangeFilter: PropTypes.func.isRequired,\n  theme: PropTypes.string.isRequired,\n};\n\n/*const StyledSelect = styled.select`\n  margin-top: 1rem;\n  width: 50%;\n  padding: 1rem 1rem 1rem 1rem;\n  border-radius: 5px;\n  border: none;\n  font-family: \"Nunito Sans\", sans-serif;\n  color: ${({ theme }) => theme.textColor};\n  background: ${({ theme }) => theme.elementsColor};\n  font-weight: 600;\n  box-shadow: ${({ theme }) => theme.boxShadow};\n\n  @media only screen and (min-width: 768px) {\n    margin-top: 0;\n    width: 200px;\n  }\n`;*/\n\nexport default FilterByRegion;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport { Link } from \"react-router-dom\";\n\nfunction CountryCard({ country, allCountries }) {\n  // Replace empty spaces with - from country names for URL\n  let subPageName = country.name;\n  subPageName = subPageName.replace(/\\s+/g, \"-\").toLowerCase();\n\n  return (\n    <CountryCardLink\n      to={{\n        pathname: `/rest-countries-api/country/${subPageName}`,\n        state: [country, allCountries],\n      }}\n    >\n      <div className=\"img\">\n        <img src={country.flag} alt={`${country.name} flag`} />\n      </div>\n      <div className=\"infoCard\">\n        <h2>{country.name}</h2>\n        <p>\n          <span style={{ fontWeight: \"600\" }}>Population: </span>\n          {country.population.toLocaleString()}\n        </p>\n        <p>\n          <span style={{ fontWeight: \"600\" }}>Region: </span>\n          {country.region}\n        </p>\n        <p>\n          <span style={{ fontWeight: \"600\" }}>Capital: </span>\n          {country.capital}\n        </p>\n      </div>\n    </CountryCardLink>\n  );\n}\n\nCountryCard.propTypes = {\n  country: PropTypes.object.isRequired,\n  allCountries: PropTypes.arrayOf(PropTypes.object).isRequired,\n};\n\nconst CountryCardLink = styled(Link)`\n  border-radius: 10px 10px 10px 10px;\n  background: ${({ theme }) => theme.elementsColor};\n  box-shadow: ${({ theme }) => theme.boxShadow};\n  cursor: pointer;\n  margin-bottom: 3rem;\n  display: flex;\n  flex-direction: column;\n  width: auto;\n  height: auto;\n  color: ${({ theme }) => theme.textColor};\n  text-decoration: none;\n\n  &:focus,\n  &:hover,\n  &:visited,\n  &:link,\n  &:active {\n    text-decoration: none;\n  }\n\n  @media only screen and (min-width: 768px) {\n    margin-bottom: 0;\n  }\n\n  .img {\n    width: 100%;\n    // height: 200px;\n    border-bottom: ${({ theme }) => theme.borderBottom};\n\n    @media only screen and (min-width: 768px) {\n      height: 200px;\n    }\n  }\n\n  img {\n    width: 100%;\n    height: 100%;\n    // max-height: 100px;\n    border-radius: 10px 10px 0px 0px;\n    //position: relative;\n    //flex: 1;\n    // object-fit: cover;\n    // object-fit: scale-down;\n    @media only screen and (min-width: 768px) {\n      object-fit: cover;\n    }\n  }\n\n  .infoCard {\n    padding: 1rem;\n    // flex-basis: 5rem;\n\n    &:link {\n      text-decoration: none;\n    }\n  }\n`;\n\nexport default CountryCard;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\n\nimport CountryCard from \"./CountryCard\";\n\nfunction CountryCards({ countriesArray, input, select }) {\n  // Parse input to make sure it always starts with a capital letter\n  function inputClean(string) {\n    return string[0].toUpperCase() + string.slice(1).toLowerCase();\n  }\n\n  // Display the correct countries based on the user's input and chosen filter\n  const countries = countriesArray\n    .filter((country) => {\n      if (select === \"World\") return country;\n      if (select) return country.region === select;\n      else return country;\n    })\n    .filter((country) => {\n      if (input) return country.name.includes(inputClean(input));\n      else return country;\n    })\n    .map((country, index) => (\n      <CountryCard\n        key={index}\n        country={country}\n        allCountries={countriesArray}\n      />\n    ));\n\n  return (\n    <StyledSection>{countriesArray.length > 0 && countries}</StyledSection>\n  );\n}\n\nCountryCards.propTypes = {\n  countriesArray: PropTypes.arrayOf(PropTypes.object).isRequired,\n  input: PropTypes.string.isRequired,\n  select: PropTypes.string.isRequired,\n};\n\nconst StyledSection = styled.section`\n  padding: 2rem 2rem 0 2rem;\n\n  @media only screen and (min-width: 768px) {\n    padding: 3rem 0 0 0;\n    display: grid;\n    grid-template: 1fr / 1fr 1fr 1fr 1fr;\n    grid-gap: 60px;\n  }\n`;\n\nexport default CountryCards;\n","import React, { useState, useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\n\nimport SearchBar from \"./SearchBar\";\nimport FilterByRegion from \"./FilterByRegion\";\nimport CountryCards from \"./CountryCards\";\n\nfunction Main({ theme }) {\n  // Track users input into the input field\n  const [input, setInput] = useState(\"\");\n\n  function handleChange(event) {\n    const { value } = event.target;\n    setInput(value);\n  }\n\n  // Fetch array of countries from the API and store it\n  const [countriesArray, setCountriesArray] = useState([]);\n\n  useEffect(() => {\n    fetch(\"https://restcountries.eu/rest/v2/all\")\n      .then((response) => response.json())\n      .then((data) => {\n        setCountriesArray(data);\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  }, []);\n\n  // Track users choice from the select field\n  const [select, setSelect] = useState(\"\");\n\n  /* Replaced with react-select\n  function handleFilterRegion(event) {\n    const { value } = event.target;\n    setSelect(value);\n  }\n  */\n\n  function handleChangeFilter(value) {\n    setSelect(value.label);\n  }\n\n  return (\n    <StyledMain>\n      <StyledFiltersDiv>\n        <SearchBar input={input} handleChange={handleChange} />\n        <FilterByRegion handleChangeFilter={handleChangeFilter} theme={theme} />\n      </StyledFiltersDiv>\n      <CountryCards\n        countriesArray={countriesArray}\n        input={input}\n        select={select}\n      />\n    </StyledMain>\n  );\n}\n\nMain.propTypes = {\n  theme: PropTypes.string.isRequired,\n};\n\nconst StyledMain = styled.main`\n  padding: 1rem;\n\n  @media only screen and (min-width: 768px) {\n    padding: 3rem 4rem;\n  }\n`;\n\nconst StyledFiltersDiv = styled.div`\n  display: flex;\n  flex-direction: column;\n\n  @media only screen and (min-width: 768px) {\n    // padding: 4rem;\n    flex-direction: row;\n    justify-content: space-between;\n    align-items: center;\n  }\n`;\n\nexport default Main;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport { Link } from \"react-router-dom\";\nimport { useLocation } from \"react-router-dom\";\nimport { IoIosArrowRoundBack } from \"react-icons/io\";\n\nfunction Subpage() {\n  // Get stored state with the useLocation hook\n  const { state } = useLocation();\n  // Destrucutre the state\n  const [country, countriesArray] = state;\n  const borderCountries = country.borders;\n\n  // Create a new array that contains object of countries that are bordering on the current country\n  // This will be used to get the full names of the bordering countries\n  let arrayNames = [];\n  countriesArray.map((country) => {\n    const alpha3Code = borderCountries.find(\n      (element) => element === country.alpha3Code\n    );\n    if (alpha3Code) {\n      arrayNames.push(country);\n    }\n    return null;\n  });\n\n  // Array of countries currencies\n  const currencies = country.currencies.map((currency) => currency.name);\n  // Array of countries languages\n  const languages = country.languages.map((language) => language.name);\n\n  return (\n    <SubpageSection>\n      <StyledLink role=\"button\" to=\"/rest-countries-api\">\n        <IoIosArrowRoundBack size=\"26px\" />\n        Back\n      </StyledLink>\n      <CountryContainer>\n        <div className=\"img\">\n          <img src={country.flag} alt={`${country.name} flag`} />\n        </div>\n        <div className=\"country\">\n          <h2>{country.name}</h2>\n          <div className=\"countryInfo\">\n            <div className=\"left\">\n              <p>\n                <span style={{ fontWeight: \"600\" }}>Native name: </span>\n                {country.nativeName}\n              </p>\n              <p>\n                <span style={{ fontWeight: \"600\" }}>Population: </span>\n                {country.population.toLocaleString()}\n              </p>\n              <p>\n                <span style={{ fontWeight: \"600\" }}>Region: </span>\n                {country.region}\n              </p>\n              <p>\n                <span style={{ fontWeight: \"600\" }}>Sub Region: </span>\n                {country.subregion}\n              </p>\n              <p>\n                <span style={{ fontWeight: \"600\" }}>Capital: </span>\n                {country.capital}\n              </p>\n            </div>\n            <div className=\"right\">\n              <p>\n                <span style={{ fontWeight: \"600\" }}>Top Level Domain: </span>\n                {country.topLevelDomain.join(\", \")}\n              </p>\n              <p>\n                <span style={{ fontWeight: \"600\" }}>Currencies: </span>\n                {currencies.join(\", \")}\n              </p>\n              <p>\n                <span style={{ fontWeight: \"600\" }}>Languages: </span>\n                {languages.join(\", \")}\n              </p>\n            </div>\n          </div>\n          <div>\n            <h3>Border Countries:</h3>\n            <BorderCountriesDiv>\n              {arrayNames.length > 0\n                ? arrayNames.map((country, index) => (\n                    <StyledLinkBorder\n                      key={index}\n                      role=\"button\"\n                      to={{\n                        pathname: `/rest-countries-api/country/${country.name\n                          .replace(/\\s+/g, \"-\")\n                          .toLowerCase()}`,\n                        state: [country, countriesArray],\n                      }}\n                    >\n                      {country.name}\n                    </StyledLinkBorder>\n                  ))\n                : \"No bordering countries.\"}\n            </BorderCountriesDiv>\n          </div>\n        </div>\n      </CountryContainer>\n    </SubpageSection>\n  );\n}\n\nconst SubpageSection = styled.section`\n  padding: 3rem 1rem 1rem 1rem;\n\n  @media only screen and (min-width: 768px) {\n    padding: 3rem 4rem;\n  }\n`;\n\nconst StyledLink = styled(Link)`\n  padding: 0.5rem 1.5rem 0.5rem 2.5rem;\n  text-decoration: none;\n  color: ${({ theme }) => theme.textColor};\n  background: ${({ theme }) => theme.elementsColor};\n  border-radius: 5px;\n  box-shadow: rgba(0, 0, 0, 0.35) 0px 5px 15px;\n  position: relative;\n\n  &:focus,\n  &:hover,\n  &:visited,\n  &:link,\n  &:active {\n    text-decoration: none;\n  }\n\n  svg {\n    position: absolute;\n    top: 5px;\n    left: 10px;\n  }\n`;\n\nconst CountryContainer = styled.div`\n  padding: 2rem 1rem;\n  margin-top: 1rem;\n\n  @media only screen and (min-width: 768px) {\n    display: flex;\n    padding: 2rem 0;\n  }\n\n  .img {\n    @media only screen and (min-width: 768px) {\n      width: 450px;\n    }\n  }\n\n  .country {\n    @media only screen and (min-width: 768px) {\n      padding-left: 4rem;\n      display: flex;\n      flex-direction: column;\n    }\n\n    .countryInfo {\n      @media only screen and (min-width: 768px) {\n        display: flex;\n        flex-direction: row;\n      }\n\n      .right {\n        padding: 1rem 0;\n\n        @media only screen and (min-width: 768px) {\n          padding: 0 0 0 4rem;\n        }\n      }\n    }\n  }\n\n  img {\n    width: 100%;\n  }\n`;\n\nconst BorderCountriesDiv = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n`;\n\nconst StyledLinkBorder = styled(Link)`\n  padding: 0.5rem;\n  text-decoration: none;\n  color: ${({ theme }) => theme.textColor};\n  background: ${({ theme }) => theme.elementsColor};\n  border-radius: 5px;\n  margin: 6px;\n\n  &:focus,\n  &:hover,\n  &:visited,\n  &:link,\n  &:active {\n    text-decoration: none;\n  }\n`;\n\nexport default Subpage;\n","import React, { useState } from \"react\";\nimport { GlobalStyles } from \"./GlobalStyle.style\";\nimport { ThemeProvider } from \"styled-components\";\nimport { lightTheme, darkTheme } from \"./components/Themes.style\";\nimport { Switch, Route } from \"react-router-dom\";\n\nimport Header from \"./components/Header\";\nimport Main from \"./components/Main\";\nimport Subpage from \"./components/Subpage\";\n\nfunction App() {\n  // Track current theme\n  const [theme, setTheme] = useState(\"light\");\n\n  function themeToggler() {\n    return theme === \"light\" ? setTheme(\"dark\") : setTheme(\"light\");\n  }\n\n  return (\n    <ThemeProvider theme={theme === \"light\" ? lightTheme : darkTheme}>\n      <GlobalStyles />\n      <Header theme={theme} themeToggler={themeToggler} />\n      <Switch>\n        <Route exact path={[\"/\", \"/rest-countries-api\"]}>\n          <Main theme={theme} />\n        </Route>\n        <Route\n          path={[\n            \"/rest-countries-api/country/:countryName\",\n            \"/country/:countryName\",\n          ]}\n        >\n          <Subpage />\n        </Route>\n      </Switch>\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\n\nimport App from \"./App\";\n// import reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <Router>\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>\n  </Router>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n"],"sourceRoot":""}