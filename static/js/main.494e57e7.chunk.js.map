{"version":3,"sources":["GlobalStyle.style.js","components/Themes.style.js","components/Header.js","components/SearchBar.js","components/FilterByRegion.js","components/CountryCard.js","components/CountryCards.js","components/Main.js","App.js","index.js"],"names":["GlobalStyles","createGlobalStyle","theme","textColor","background","darkTheme","elementsColor","inputColor","borderBottom","boxShadow","boxShadowHeader","lightTheme","HeaderStyled","styled","header","ThemeButton","button","Header","themeToggler","light","size","dark","onClick","StyledInput","input","SearchBarWrapper","div","SearchBar","handleChange","type","name","placeholder","value","onChange","StyledSelect","select","FilterByRegion","handleFilterRegion","CountryCardDiv","CountryCard","country","console","log","className","src","flag","alt","style","fontWeight","population","toLocaleString","region","capital","StyledSection","section","CountryCards","countriesArray","countries","filter","includes","string","toUpperCase","slice","toLowerCase","map","index","length","StyledMain","main","StyledFiltersDiv","Main","useState","setInput","setCountriesArray","useEffect","fetch","then","response","json","data","setSelect","event","target","App","setTheme","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.494e57e7.chunk.js","sourcesContent":["import { createGlobalStyle } from \"styled-components\";\n\n/*\nThe designs were created to the following widths:\n- Mobile: 375px\n- Desktop: 1440px \n\n## Typography\n\n### Body Copy\n\n- Homepage Items: 14px\n- Detail Page: 16px \n*/\n\nexport const GlobalStyles = createGlobalStyle`\n    :root {\n        // Dark mode\n        --dark-mode-text: hsl(0, 0%, 100%);\n        --dark-mode-elements: hsl(209, 23%, 22%);\n        --dark-mode-background: hsl(207, 26%, 17%);\n        // Light mode\n        --light-mode-text: hsl(200, 15%, 8%);\n        --light-mode-input: hsl(0, 0%, 52%);\n        --light-mode-background: hsl(0, 0%, 94%);\n        --light-mode-elements: hsl(0, 0%, 100%);\n    }\n\n    *,\n    *:before,\n    *:after {\n        box-sizing: border-box;\n    }\n    html {\n        max-width: 1920px;\n        margin: 0 auto;\n    }\n\n    body {\n        margin: 0;\n        padding: 0;\n        color: ${({ theme }) => theme.textColor};\n        background: ${({ theme }) => theme.background};\n        font-size: 14px;\n        font-family: 'Nunito Sans', sans-serif;\n\n        @media only screen and (min-width: 768px) {\n            // To do\n        }\n    }\n\n`;\n","export const darkTheme = {\n  textColor: \"hsl(0, 0%, 100%)\",\n  elementsColor: \"hsl(209, 23%, 22%)\",\n  background: \"hsl(207, 26%, 17%)\",\n  inputColor: \"hsl(0, 0%, 100%)\",\n  borderBottom: \"none\",\n  boxShadow: \"none\",\n  boxShadowHeader: \"none\",\n};\n\nexport const lightTheme = {\n  textColor: \"hsl(200, 15%, 8%)\",\n  elementsColor: \"hsl(0, 0%, 100%)\",\n  background: \"hsl(0, 0%, 94%)\",\n  inputColor: \"hsl(0, 0%, 52%)\",\n  borderBottom: \"2px solid hsl(0, 0%, 92%)\",\n  boxShadow: \"rgba(100, 100, 111, 0.2) 0px 7px 29px 0px;\",\n  boxShadowHeader: \"0 2px 5px -2px gray;\",\n};\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport { IoMoonOutline } from \"react-icons/io5\";\nimport { IoMoonSharp } from \"react-icons/io5\";\n\nfunction Header({ theme, themeToggler }) {\n  const light = (\n    <>\n      <IoMoonOutline size=\"14px\" /> Dark Mode\n    </>\n  );\n\n  const dark = (\n    <>\n      <IoMoonSharp size=\"14px\" /> Light Mode\n    </>\n  );\n\n  return (\n    <HeaderStyled>\n      <h1>Where in the world?</h1>\n      <ThemeButton onClick={themeToggler}>\n        {theme === \"light\" ? light : dark}\n      </ThemeButton>\n    </HeaderStyled>\n  );\n}\n\nconst HeaderStyled = styled.header`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  padding: 1.3rem 1rem;\n  background: ${({ theme }) => theme.elementsColor};\n  box-shadow: ${({ theme }) => theme.boxShadowHeader};\n\n  @media only screen and (min-width: 768px) {\n    padding: 0.5rem 4rem;\n  }\n\n  h1 {\n    font-size: 1rem;\n\n    @media only screen and (min-width: 768px) {\n      font-size: 1.2rem;\n    }\n  }\n`;\n\nconst ThemeButton = styled.button`\n  border: none;\n  background: none;\n  cursor: pointer;\n  font-size: 14px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  font-family: \"Nunito Sans\", sans-serif;\n  font-weight: 600;\n  color: ${({ theme }) => theme.textColor};\n  transition: 0.3s;\n\n  &:hover {\n    background: ${({ theme }) => theme.background};\n    border-radius: 5px;\n    padding: 0.5rem 1rem;\n  }\n\n  svg {\n    margin-right: 0.5rem;\n  }\n`;\n\nexport default Header;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport { AiOutlineSearch } from \"react-icons/ai\";\n\nfunction SearchBar({ input, handleChange }) {\n  return (\n    <SearchBarWrapper>\n      <StyledInput\n        type=\"text\"\n        name=\"searchInput\"\n        placeholder=\"Search for a country...\"\n        value={input}\n        onChange={handleChange}\n      />\n      <AiOutlineSearch size=\"24px\" />\n    </SearchBarWrapper>\n  );\n}\n\nconst StyledInput = styled.input`\n  width: 100%;\n  padding: 1rem 1rem 1rem 4rem;\n  border-radius: 5px;\n  border: none;\n  font-family: \"Nunito Sans\", sans-serif;\n  color: ${({ theme }) => theme.inputColor};\n  background: ${({ theme }) => theme.elementsColor};\n  font-weight: 300;\n  box-shadow: ${({ theme }) => theme.boxShadow};\n\n  &::placeholder {\n    color: ${({ theme }) => theme.inputColor};\n    font-weight: 600;\n  }\n\n  ::-webkit-input-placeholder {\n    /* Chrome/Opera/Safari */\n    color: ${({ theme }) => theme.inputColor};\n  }\n  ::-moz-placeholder {\n    /* Firefox 19+ */\n    color: ${({ theme }) => theme.inputColor};\n  }\n  :-moz-placeholder {\n    /* Firefox 18- */\n    color: ${({ theme }) => theme.inputColor};\n  }\n  :-ms-input-placeholder {\n    /* Edge/IE 10+ */\n    color: ${({ theme }) => theme.inputColor};\n  }\n\n  @media only screen and (min-width: 768px) {\n    width: 500px;\n  }\n`;\n\nconst SearchBarWrapper = styled.div`\n  position: relative;\n  fill: \"red\";\n\n  @media only screen and (min-width: 768px) {\n    // todo\n  }\n\n  svg {\n    position: absolute;\n    right: 85%;\n    top: 27%;\n    fill: ${({ theme }) => theme.inputColor};\n\n    @media only screen and (min-width: 768px) {\n      right: 90%;\n      // top: 27%;\n    }\n  }\n`;\n\nexport default SearchBar;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nfunction FilterByRegion({ select, handleFilterRegion }) {\n  return (\n    <StyledSelect\n      value={select}\n      onChange={handleFilterRegion}\n      name=\"filterByRegion\"\n    >\n      <option value=\"\">Filter By Region</option>\n      <option value=\"Africa\">Africa</option>\n      <option value=\"Americas\">Americas</option>\n      <option value=\"Asia\">Asia</option>\n      <option value=\"Europe\">Europe</option>\n      <option value=\"Oceania\">Oceania</option>\n    </StyledSelect>\n  );\n}\n\nconst StyledSelect = styled.select`\n  margin-top: 1rem;\n  width: 50%;\n  padding: 1rem 1rem 1rem 1rem;\n  border-radius: 5px;\n  border: none;\n  font-family: \"Nunito Sans\", sans-serif;\n  color: ${({ theme }) => theme.textColor};\n  background: ${({ theme }) => theme.elementsColor};\n  font-weight: 600;\n  box-shadow: ${({ theme }) => theme.boxShadow};\n\n  @media only screen and (min-width: 768px) {\n    margin-top: 0;\n    width: 200px;\n  }\n`;\n\nexport default FilterByRegion;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nfunction CountryCard({ country }) {\n  return (\n    <CountryCardDiv onClick={() => console.log(\"Link to country subpage\")}>\n      <div className=\"imgTest\">\n        <img src={country.flag} alt={`${country.name} flag`} />\n      </div>\n      <div className=\"test\">\n        <h2>{country.name}</h2>\n        <p>\n          <span style={{ fontWeight: \"600\" }}>Population: </span>\n          {country.population.toLocaleString()}\n        </p>\n        <p>\n          <span style={{ fontWeight: \"600\" }}>Region: </span>\n          {country.region}\n        </p>\n        <p>\n          <span style={{ fontWeight: \"600\" }}>Capital: </span>\n          {country.capital}\n        </p>\n      </div>\n    </CountryCardDiv>\n  );\n}\n\nconst CountryCardDiv = styled.div`\n  border-radius: 10px 10px 10px 10px;\n  background: ${({ theme }) => theme.elementsColor};\n  box-shadow: ${({ theme }) => theme.boxShadow};\n  cursor: pointer;\n  margin-bottom: 3rem;\n  display: flex;\n  flex-direction: column;\n  width: auto;\n  height: auto;\n\n  @media only screen and (min-width: 768px) {\n    margin-bottom: 0;\n  }\n\n  .imgTest {\n    width: 100%;\n    // height: 200px;\n    border-bottom: ${({ theme }) => theme.borderBottom};\n\n    @media only screen and (min-width: 768px) {\n      height: 200px;\n    }\n  }\n\n  img {\n    width: 100%;\n    height: 100%;\n    // max-height: 100px;\n    border-radius: 10px 10px 0px 0px;\n    //position: relative;\n    //flex: 1;\n    // object-fit: cover;\n    // object-fit: scale-down;\n    @media only screen and (min-width: 768px) {\n      object-fit: cover;\n    }\n  }\n\n  .test {\n    padding: 1rem;\n    // flex-basis: 5rem;\n  }\n`;\n\nexport default CountryCard;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nimport CountryCard from \"./CountryCard\";\n\nfunction CountryCards({ countriesArray, input, select }) {\n  function inputClean(string) {\n    return string[0].toUpperCase() + string.slice(1).toLowerCase();\n  }\n\n  // Don't use index as key!\n  const countries = countriesArray\n    .filter((country) => {\n      if (select) return country.region === select;\n      else return country;\n    })\n    .filter((country) => {\n      if (input) return country.name.includes(inputClean(input));\n      else return country;\n    })\n    .map((country, index) => <CountryCard key={index} country={country} />);\n\n  return (\n    <StyledSection>{countriesArray.length > 0 && countries}</StyledSection>\n  );\n}\n\nconst StyledSection = styled.section`\n  padding: 2rem 2rem 0 2rem;\n\n  @media only screen and (min-width: 768px) {\n    padding: 3rem 0 0 0;\n    display: grid;\n    grid-template: 1fr / 1fr 1fr 1fr 1fr;\n    grid-gap: 60px;\n  }\n`;\n\nexport default CountryCards;\n","import React, { useState, useEffect } from \"react\";\nimport styled from \"styled-components\";\n\nimport SearchBar from \"./SearchBar\";\nimport FilterByRegion from \"./FilterByRegion\";\nimport CountryCards from \"./CountryCards\";\n\nfunction Main() {\n  const [input, setInput] = useState(\"\");\n\n  function handleChange(event) {\n    const { value } = event.target;\n    setInput(value);\n  }\n\n  //console.log(input);\n\n  const [countriesArray, setCountriesArray] = useState([]);\n\n  // console.log(countriesArray[0]);\n\n  useEffect(() => {\n    fetch(\"https://restcountries.eu/rest/v2/all\")\n      .then((response) => response.json())\n      .then((data) => {\n        setCountriesArray(data);\n      });\n  }, []);\n\n  const [select, setSelect] = useState(\"\");\n\n  function handleFilterRegion(event) {\n    const { value } = event.target;\n    setSelect(value);\n  }\n\n  // console.log(select);\n\n  // Wrap input with a form???\n\n  return (\n    <StyledMain>\n      <StyledFiltersDiv>\n        <SearchBar input={input} handleChange={handleChange} />\n        <FilterByRegion\n          select={select}\n          handleFilterRegion={handleFilterRegion}\n        />\n      </StyledFiltersDiv>\n      <CountryCards\n        countriesArray={countriesArray}\n        input={input}\n        select={select}\n      />\n    </StyledMain>\n  );\n}\n\nconst StyledMain = styled.main`\n  padding: 1rem;\n\n  @media only screen and (min-width: 768px) {\n    padding: 3rem 4rem;\n  }\n`;\n\nconst StyledFiltersDiv = styled.div`\n  display: flex;\n  flex-direction: column;\n\n  @media only screen and (min-width: 768px) {\n    // padding: 4rem;\n    flex-direction: row;\n    justify-content: space-between;\n    align-items: center;\n  }\n`;\n\nexport default Main;\n","import React, { useState } from \"react\";\nimport { GlobalStyles } from \"./GlobalStyle.style\";\nimport { ThemeProvider } from \"styled-components\";\nimport { lightTheme, darkTheme } from \"./components/Themes.style\";\n\nimport Header from \"./components/Header\";\nimport Main from \"./components/Main\";\n\n// Your challenge is to integrate with the [REST Countries API](https://restcountries.eu) to pull country data and display it like in the designs.\n/*\nYour users should be able to:\n\n- See all countries from the API on the homepage\n- Search for a country using an `input` field\n- Filter countries by region\n- Click on a country to see more detailed information on a separate page\n- Click through to the border countries on the detail page\n- Toggle the color scheme between light and dark mode (optional)\n*/\n\nfunction App() {\n  const [theme, setTheme] = useState(\"light\");\n\n  function themeToggler() {\n    return theme === \"light\" ? setTheme(\"dark\") : setTheme(\"light\");\n  }\n\n  // console.log(theme);\n\n  return (\n    <ThemeProvider theme={theme === \"light\" ? lightTheme : darkTheme}>\n      <GlobalStyles />\n      <Header theme={theme} themeToggler={themeToggler} />\n      <Main />\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n// import reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n"],"sourceRoot":""}