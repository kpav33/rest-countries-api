{"version":3,"sources":["GlobalStyle.style.js","components/Header.js","components/SearchBar.js","components/CountryCard.js","components/CountryCards.js","components/Main.js","App.js","index.js"],"names":["GlobalStyles","createGlobalStyle","HeaderStyled","styled","header","ThemeButton","button","Header","useState","themeSwitch","setThemeSwitch","light","size","dark","onClick","StyledInput","input","SearchBarWrapper","div","SearchBar","handleChange","type","name","placeholder","value","onChange","fill","CountryCardDiv","CountryCard","country","console","log","src","flag","alt","className","style","fontWeight","population","toLocaleString","region","capital","StyledSection","section","CountryCards","countriesArray","countries","filter","includes","string","toUpperCase","slice","toLowerCase","map","index","length","StyledMain","main","Main","setInput","setCountriesArray","useEffect","fetch","then","response","json","data","select","setSelect","event","target","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+LAeaA,EAAeC,YAAH,04B,qBCoBzB,I,IAAMC,EAAeC,IAAOC,OAAV,6LAYZC,EAAcF,IAAOG,OAAV,2UAoBFC,EA9Df,WAAmB,IAAD,EACsBC,mBAAS,SAD/B,mBACTC,EADS,KACIC,EADJ,KAQVC,EACJ,qCACE,cAAC,IAAD,CAAeC,KAAK,SADtB,gBAKIC,EACJ,qCACE,cAAC,IAAD,CAAaD,KAAK,SADpB,iBAKF,OACE,eAACV,EAAD,WACE,qDACA,cAACG,EAAD,CAAaS,QApBjB,WACsB,UAAhBL,GAAyBC,EAAe,QACxB,SAAhBD,GAAwBC,EAAe,UAkBzC,SACmB,UAAhBD,EAA0BE,EAAQE,Q,QCV3C,I,EAAME,EAAcZ,IAAOa,MAAV,kRAWXC,EAAmBd,IAAOe,IAAV,4HAUPC,EApCf,YAA6C,IAAxBH,EAAuB,EAAvBA,MAAOI,EAAgB,EAAhBA,aAC1B,OACE,eAACH,EAAD,WACE,cAACF,EAAD,CACEM,KAAK,OACLC,KAAK,cACLC,YAAY,0BACZC,MAAOR,EACPS,SAAUL,IAEZ,cAAC,IAAD,CAAiBR,KAAK,OAAOc,KAAK,gCCYxC,I,EAAMC,EAAiBxB,IAAOe,IAAV,2UAkBLU,EAzCf,YAAmC,IAAZC,EAAW,EAAXA,QACrB,OACE,eAACF,EAAD,CAAgBb,QAAS,kBAAMgB,QAAQC,IAAI,4BAA3C,UACE,qBAAKC,IAAKH,EAAQI,KAAMC,IAAG,UAAKL,EAAQP,KAAb,WAC3B,sBAAKa,UAAU,OAAf,UACE,6BAAKN,EAAQP,OACb,8BACE,sBAAMc,MAAO,CAAEC,WAAY,OAA3B,0BACCR,EAAQS,WAAWC,oBAEtB,8BACE,sBAAMH,MAAO,CAAEC,WAAY,OAA3B,sBACCR,EAAQW,UAEX,8BACE,sBAAMJ,MAAO,CAAEC,WAAY,OAA3B,uBACCR,EAAQY,kBCInB,I,EAAMC,EAAgBvC,IAAOwC,QAAV,8CAIJC,EAtBf,YAAkD,IAA1BC,EAAyB,EAAzBA,eAAgB7B,EAAS,EAATA,MAMhC8B,EAAYD,EACfE,QAAO,SAAClB,GACP,OAAIb,EAAca,EAAQP,KAAK0B,UAPfC,EAOmCjC,GANvC,GAAGkC,cAAgBD,EAAOE,MAAM,GAAGC,eAOnCvB,EARhB,IAAoBoB,KAUjBI,KAAI,SAACxB,EAASyB,GAAV,OAAoB,cAAC,EAAD,CAAyBzB,QAASA,GAAhByB,MAE7C,OACE,cAACZ,EAAD,UAAgBG,EAAeU,OAAS,GAAKT,KCuCjD,IAAMU,EAAarD,IAAOsD,KAAV,8CAIDC,EAxDf,WAAiB,IAAD,EACYlD,mBAAS,IADrB,mBACPQ,EADO,KACA2C,EADA,OAU8BnD,mBAAS,IAVvC,mBAUPqC,EAVO,KAUSe,EAVT,KAYd9B,QAAQC,IAAIc,EAAe,IAE3BgB,qBAAU,WACRC,MAAM,wCACHC,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACG,GACLN,EAAkBM,QAErB,IApBW,MAsBc1D,mBAAS,UAtBvB,mBAsBP2D,EAtBO,KAsBCC,EAtBD,KAiCd,OAJAtC,QAAQC,IAAIoC,GAKV,eAACX,EAAD,WACE,cAAC,EAAD,CAAWxC,MAAOA,EAAOI,aAhC7B,SAAsBiD,GAAQ,IACpB7C,EAAU6C,EAAMC,OAAhB9C,MACRmC,EAASnC,MA+BP,yBACEA,MAAO2C,EACP1C,SAdN,SAA4B4C,GAAQ,IAC1B7C,EAAU6C,EAAMC,OAAhB9C,MACR4C,EAAU5C,IAaNF,KAAK,iBAHP,UAKE,wBAAQE,MAAM,SAAd,oBACA,wBAAQA,MAAM,UAAd,qBACA,wBAAQA,MAAM,OAAd,kBACA,wBAAQA,MAAM,SAAd,oBACA,wBAAQA,MAAM,UAAd,wBAEF,cAAC,EAAD,CAAcqB,eAAgBA,EAAgB7B,MAAOA,QCzB5CuD,MAVf,WACE,OACE,qCACE,cAACvE,EAAD,IACA,cAAC,EAAD,IACA,cAAC,EAAD,QClBNwE,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.9cd17f78.chunk.js","sourcesContent":["import { createGlobalStyle } from \"styled-components\";\n\n/*\nThe designs were created to the following widths:\n- Mobile: 375px\n- Desktop: 1440px \n\n## Typography\n\n### Body Copy\n\n- Homepage Items: 14px\n- Detail Page: 16px \n*/\n\nexport const GlobalStyles = createGlobalStyle`\n    :root {\n        // Dark mode\n        --dark-mode-text: hsl(0, 0%, 100%);\n        --dark-mode-elements: hsl(209, 23%, 22%);\n        --dark-mode-background: hsl(207, 26%, 17%);\n        // Light mode\n        --light-mode-text: hsl(200, 15%, 8%);\n        --light-mode-input: hsl(0, 0%, 52%);\n        --light-mode-background: hsl(0, 0%, 94%);\n        --light-mode-elements: hsl(0, 0%, 100%);\n    }\n\n    *,\n    *:before,\n    *:after {\n        box-sizing: border-box;\n    }\n    html {\n        max-width: 1920px;\n        margin: 0 auto;\n    }\n\n    body {\n        margin: 0;\n        padding: 0;\n        color: var(--light-mode-text);\n        background: var(--light-mode-background);\n        font-size: 14px;\n        font-family: 'Nunito Sans', sans-serif;\n\n        @media only screen and (min-width: 768px) {\n            // To do\n        }\n    }\n\n`;\n","import React, { useState } from \"react\";\nimport styled from \"styled-components\";\nimport { IoMoonOutline } from \"react-icons/io5\";\nimport { IoMoonSharp } from \"react-icons/io5\";\n\nfunction Header() {\n  const [themeSwitch, setThemeSwitch] = useState(\"light\");\n\n  function handleClick() {\n    if (themeSwitch === \"light\") setThemeSwitch(\"dark\");\n    if (themeSwitch === \"dark\") setThemeSwitch(\"light\");\n  }\n\n  const light = (\n    <>\n      <IoMoonOutline size=\"14px\" /> Dark Mode\n    </>\n  );\n\n  const dark = (\n    <>\n      <IoMoonSharp size=\"14px\" /> Light Mode\n    </>\n  );\n\n  return (\n    <HeaderStyled>\n      <h1>Where in the world?</h1>\n      <ThemeButton onClick={handleClick}>\n        {themeSwitch === \"light\" ? light : dark}\n      </ThemeButton>\n    </HeaderStyled>\n  );\n}\n\nconst HeaderStyled = styled.header`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  padding: 1.3rem 1rem;\n  background: white;\n\n  h1 {\n    font-size: 1rem;\n  }\n`;\n\nconst ThemeButton = styled.button`\n  border: none;\n  background: none;\n  cursor: pointer;\n  font-size: 14px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  font-family: \"Nunito Sans\", sans-serif;\n  font-weight: 600;\n\n  &:hover {\n    background: lightgray;\n  }\n\n  svg {\n    margin-right: 0.5rem;\n  }\n`;\n\nexport default Header;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport { AiOutlineSearch } from \"react-icons/ai\";\n\nfunction SearchBar({ input, handleChange }) {\n  return (\n    <SearchBarWrapper>\n      <StyledInput\n        type=\"text\"\n        name=\"searchInput\"\n        placeholder=\"Search for a country...\"\n        value={input}\n        onChange={handleChange}\n      />\n      <AiOutlineSearch size=\"24px\" fill=\"var(--light-mode-input)\" />\n    </SearchBarWrapper>\n  );\n}\n\nconst StyledInput = styled.input`\n  width: 100%;\n  padding: 1rem 1rem 1rem 4rem;\n  border-radius: 5px;\n  border: none;\n  font-family: \"Nunito Sans\", sans-serif;\n  color: var(--light-mode-input);\n  font-weight: 300;\n  box-shadow: rgba(100, 100, 111, 0.2) 0px 7px 29px 0px;\n`;\n\nconst SearchBarWrapper = styled.div`\n  position: relative;\n\n  svg {\n    position: absolute;\n    right: 85%;\n    top: 27%;\n  }\n`;\n\nexport default SearchBar;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nfunction CountryCard({ country }) {\n  return (\n    <CountryCardDiv onClick={() => console.log(\"Link to country subpage\")}>\n      <img src={country.flag} alt={`${country.name} flag`} />\n      <div className=\"test\">\n        <h2>{country.name}</h2>\n        <p>\n          <span style={{ fontWeight: \"600\" }}>Population: </span>\n          {country.population.toLocaleString()}\n        </p>\n        <p>\n          <span style={{ fontWeight: \"600\" }}>Region: </span>\n          {country.region}\n        </p>\n        <p>\n          <span style={{ fontWeight: \"600\" }}>Capital: </span>\n          {country.capital}\n        </p>\n      </div>\n    </CountryCardDiv>\n  );\n}\n\nconst CountryCardDiv = styled.div`\n  border-radius: 10px 10px 10px 10px;\n  background: white;\n  box-shadow: rgba(100, 100, 111, 0.2) 0px 7px 29px 0px;\n  cursor: pointer;\n  margin-bottom: 3rem;\n\n  img {\n    max-width: 100%;\n    border-radius: 10px 10px 0px 0px;\n    position: relative;\n  }\n\n  .test {\n    padding: 1rem;\n  }\n`;\n\nexport default CountryCard;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nimport CountryCard from \"./CountryCard\";\n\nfunction CountryCards({ countriesArray, input }) {\n  function inputClean(string) {\n    return string[0].toUpperCase() + string.slice(1).toLowerCase();\n  }\n\n  // Don't use index as key!\n  const countries = countriesArray\n    .filter((country) => {\n      if (input) return country.name.includes(inputClean(input));\n      else return country;\n    })\n    .map((country, index) => <CountryCard key={index} country={country} />);\n\n  return (\n    <StyledSection>{countriesArray.length > 0 && countries}</StyledSection>\n  );\n}\n\nconst StyledSection = styled.section`\n  padding: 2rem;\n`;\n\nexport default CountryCards;\n","import React, { useState, useEffect } from \"react\";\nimport styled from \"styled-components\";\n\nimport SearchBar from \"./SearchBar\";\nimport CountryCards from \"./CountryCards\";\n\nfunction Main() {\n  const [input, setInput] = useState(\"\");\n\n  function handleChange(event) {\n    const { value } = event.target;\n    setInput(value);\n  }\n\n  //console.log(input);\n\n  const [countriesArray, setCountriesArray] = useState([]);\n\n  console.log(countriesArray[0]);\n\n  useEffect(() => {\n    fetch(\"https://restcountries.eu/rest/v2/all\")\n      .then((response) => response.json())\n      .then((data) => {\n        setCountriesArray(data);\n      });\n  }, []);\n\n  const [select, setSelect] = useState(\"Africa\");\n\n  function handleFilterRegion(event) {\n    const { value } = event.target;\n    setSelect(value);\n  }\n\n  console.log(select);\n\n  // Wrap input with a form???\n\n  return (\n    <StyledMain>\n      <SearchBar input={input} handleChange={handleChange} />\n      <select\n        value={select}\n        onChange={handleFilterRegion}\n        name=\"filterByRegion\"\n      >\n        <option value=\"Africa\">Africa</option>\n        <option value=\"America\">America</option>\n        <option value=\"Asia\">Asia</option>\n        <option value=\"Europe\">Europe</option>\n        <option value=\"Oceania\">Oceania</option>\n      </select>\n      <CountryCards countriesArray={countriesArray} input={input} />\n    </StyledMain>\n  );\n}\n\nconst StyledMain = styled.main`\n  padding: 1rem;\n`;\n\nexport default Main;\n","import React from \"react\";\nimport { GlobalStyles } from \"./GlobalStyle.style\";\n\nimport Header from \"./components/Header\";\nimport Main from \"./components/Main\";\n\n// Your challenge is to integrate with the [REST Countries API](https://restcountries.eu) to pull country data and display it like in the designs.\n/*\nYour users should be able to:\n\n- See all countries from the API on the homepage\n- Search for a country using an `input` field\n- Filter countries by region\n- Click on a country to see more detailed information on a separate page\n- Click through to the border countries on the detail page\n- Toggle the color scheme between light and dark mode (optional)\n*/\n\nfunction App() {\n  return (\n    <>\n      <GlobalStyles />\n      <Header />\n      <Main />\n    </>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n// import reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n"],"sourceRoot":""}