{"version":3,"sources":["GlobalStyle.style.js","components/Themes.style.js","components/Header.js","components/SearchBar.js","components/FilterByRegion.js","components/CountryCard.js","components/CountryCards.js","components/Main.js","components/Subpage.js","App.js","index.js"],"names":["GlobalStyles","createGlobalStyle","theme","textColor","background","darkTheme","elementsColor","inputColor","borderBottom","boxShadow","boxShadowHeader","lightTheme","HeaderStyled","styled","header","ThemeButton","button","Header","themeToggler","light","size","dark","onClick","StyledInput","input","SearchBarWrapper","div","SearchBar","handleChange","type","name","placeholder","value","onChange","StyledSelect","select","FilterByRegion","handleFilterRegion","CountryCardLink","Link","CountryCard","country","allCountries","to","pathname","state","className","src","flag","alt","style","fontWeight","population","toLocaleString","region","capital","StyledSection","section","CountryCards","countriesArray","countries","filter","includes","string","toUpperCase","slice","toLowerCase","map","index","length","StyledMain","main","StyledFiltersDiv","Main","useState","setInput","setCountriesArray","useEffect","fetch","then","response","json","data","setSelect","event","target","SubpageSection","StyledLink","CountryContainer","BorderCountriesDiv","StyledLinkBorder","Subpage","useLocation","borderCountries","borders","arrayNames","find","element","alpha3Code","push","currencies","currency","languages","language","role","nativeName","subregion","topLevelDomain","join","App","setTheme","exact","path","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.51ccc678.chunk.js","sourcesContent":["import { createGlobalStyle } from \"styled-components\";\n\n/*\nThe designs were created to the following widths:\n- Mobile: 375px\n- Desktop: 1440px \n\n## Typography\n\n### Body Copy\n\n- Homepage Items: 14px\n- Detail Page: 16px \n*/\n\nexport const GlobalStyles = createGlobalStyle`\n    :root {\n        // Dark mode\n        --dark-mode-text: hsl(0, 0%, 100%);\n        --dark-mode-elements: hsl(209, 23%, 22%);\n        --dark-mode-background: hsl(207, 26%, 17%);\n        // Light mode\n        --light-mode-text: hsl(200, 15%, 8%);\n        --light-mode-input: hsl(0, 0%, 52%);\n        --light-mode-background: hsl(0, 0%, 94%);\n        --light-mode-elements: hsl(0, 0%, 100%);\n    }\n\n    *,\n    *:before,\n    *:after {\n        box-sizing: border-box;\n    }\n    html {\n        max-width: 1920px;\n        margin: 0 auto;\n    }\n\n    body {\n        margin: 0;\n        padding: 0;\n        color: ${({ theme }) => theme.textColor};\n        background: ${({ theme }) => theme.background};\n        font-size: 14px;\n        font-family: 'Nunito Sans', sans-serif;\n\n        @media only screen and (min-width: 768px) {\n            // To do\n        }\n    }\n\n`;\n","export const darkTheme = {\n  textColor: \"hsl(0, 0%, 100%)\",\n  elementsColor: \"hsl(209, 23%, 22%)\",\n  background: \"hsl(207, 26%, 17%)\",\n  inputColor: \"hsl(0, 0%, 100%)\",\n  borderBottom: \"none\",\n  boxShadow: \"none\",\n  boxShadowHeader: \"none\",\n};\n\nexport const lightTheme = {\n  textColor: \"hsl(200, 15%, 8%)\",\n  elementsColor: \"hsl(0, 0%, 100%)\",\n  background: \"hsl(0, 0%, 94%)\",\n  inputColor: \"hsl(0, 0%, 52%)\",\n  borderBottom: \"2px solid hsl(0, 0%, 92%)\",\n  boxShadow: \"rgba(100, 100, 111, 0.2) 0px 7px 29px 0px;\",\n  boxShadowHeader: \"0 2px 5px -2px gray;\",\n};\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport { IoMoonOutline } from \"react-icons/io5\";\nimport { IoMoonSharp } from \"react-icons/io5\";\n\nfunction Header({ theme, themeToggler }) {\n  const light = (\n    <>\n      <IoMoonOutline size=\"14px\" /> Dark Mode\n    </>\n  );\n\n  const dark = (\n    <>\n      <IoMoonSharp size=\"14px\" /> Light Mode\n    </>\n  );\n\n  return (\n    <HeaderStyled>\n      <h1>Where in the world?</h1>\n      <ThemeButton onClick={themeToggler}>\n        {theme === \"light\" ? light : dark}\n      </ThemeButton>\n    </HeaderStyled>\n  );\n}\n\nconst HeaderStyled = styled.header`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  padding: 1.3rem 1rem;\n  background: ${({ theme }) => theme.elementsColor};\n  box-shadow: ${({ theme }) => theme.boxShadowHeader};\n\n  @media only screen and (min-width: 768px) {\n    padding: 0.5rem 4rem;\n  }\n\n  h1 {\n    font-size: 1rem;\n\n    @media only screen and (min-width: 768px) {\n      font-size: 1.2rem;\n    }\n  }\n`;\n\nconst ThemeButton = styled.button`\n  border: none;\n  background: none;\n  cursor: pointer;\n  font-size: 14px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  font-family: \"Nunito Sans\", sans-serif;\n  font-weight: 600;\n  color: ${({ theme }) => theme.textColor};\n  transition: 0.3s;\n\n  &:hover {\n    background: ${({ theme }) => theme.background};\n    border-radius: 5px;\n    padding: 0.5rem 1rem;\n  }\n\n  svg {\n    margin-right: 0.5rem;\n  }\n`;\n\nexport default Header;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport { AiOutlineSearch } from \"react-icons/ai\";\n\nfunction SearchBar({ input, handleChange }) {\n  return (\n    <SearchBarWrapper>\n      <StyledInput\n        type=\"text\"\n        name=\"searchInput\"\n        placeholder=\"Search for a country...\"\n        value={input}\n        onChange={handleChange}\n      />\n      <AiOutlineSearch size=\"24px\" />\n    </SearchBarWrapper>\n  );\n}\n\nconst StyledInput = styled.input`\n  width: 100%;\n  padding: 1rem 1rem 1rem 4rem;\n  border-radius: 5px;\n  border: none;\n  font-family: \"Nunito Sans\", sans-serif;\n  color: ${({ theme }) => theme.inputColor};\n  background: ${({ theme }) => theme.elementsColor};\n  font-weight: 300;\n  box-shadow: ${({ theme }) => theme.boxShadow};\n\n  &::placeholder {\n    color: ${({ theme }) => theme.inputColor};\n    font-weight: 600;\n  }\n\n  ::-webkit-input-placeholder {\n    /* Chrome/Opera/Safari */\n    color: ${({ theme }) => theme.inputColor};\n  }\n  ::-moz-placeholder {\n    /* Firefox 19+ */\n    color: ${({ theme }) => theme.inputColor};\n  }\n  :-moz-placeholder {\n    /* Firefox 18- */\n    color: ${({ theme }) => theme.inputColor};\n  }\n  :-ms-input-placeholder {\n    /* Edge/IE 10+ */\n    color: ${({ theme }) => theme.inputColor};\n  }\n\n  @media only screen and (min-width: 768px) {\n    width: 500px;\n  }\n`;\n\nconst SearchBarWrapper = styled.div`\n  position: relative;\n  fill: \"red\";\n\n  @media only screen and (min-width: 768px) {\n    // todo\n  }\n\n  svg {\n    position: absolute;\n    right: 85%;\n    top: 27%;\n    fill: ${({ theme }) => theme.inputColor};\n\n    @media only screen and (min-width: 768px) {\n      right: 90%;\n      // top: 27%;\n    }\n  }\n`;\n\nexport default SearchBar;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nfunction FilterByRegion({ select, handleFilterRegion }) {\n  return (\n    <StyledSelect\n      value={select}\n      onChange={handleFilterRegion}\n      name=\"filterByRegion\"\n    >\n      <option value=\"\">Filter By Region</option>\n      <option value=\"Africa\">Africa</option>\n      <option value=\"Americas\">Americas</option>\n      <option value=\"Asia\">Asia</option>\n      <option value=\"Europe\">Europe</option>\n      <option value=\"Oceania\">Oceania</option>\n    </StyledSelect>\n  );\n}\n\nconst StyledSelect = styled.select`\n  margin-top: 1rem;\n  width: 50%;\n  padding: 1rem 1rem 1rem 1rem;\n  border-radius: 5px;\n  border: none;\n  font-family: \"Nunito Sans\", sans-serif;\n  color: ${({ theme }) => theme.textColor};\n  background: ${({ theme }) => theme.elementsColor};\n  font-weight: 600;\n  box-shadow: ${({ theme }) => theme.boxShadow};\n\n  @media only screen and (min-width: 768px) {\n    margin-top: 0;\n    width: 200px;\n  }\n`;\n\nexport default FilterByRegion;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport { Link } from \"react-router-dom\";\n\nfunction CountryCard({ country, allCountries }) {\n  return (\n    <CountryCardLink\n      to={{\n        pathname: `/country/${country.name}`,\n        state: [country, allCountries],\n      }}\n    >\n      <div className=\"imgTest\">\n        <img src={country.flag} alt={`${country.name} flag`} />\n      </div>\n      <div className=\"test\">\n        <h2>{country.name}</h2>\n        <p>\n          <span style={{ fontWeight: \"600\" }}>Population: </span>\n          {country.population.toLocaleString()}\n        </p>\n        <p>\n          <span style={{ fontWeight: \"600\" }}>Region: </span>\n          {country.region}\n        </p>\n        <p>\n          <span style={{ fontWeight: \"600\" }}>Capital: </span>\n          {country.capital}\n        </p>\n      </div>\n    </CountryCardLink>\n  );\n}\n\nconst CountryCardLink = styled(Link)`\n  border-radius: 10px 10px 10px 10px;\n  background: ${({ theme }) => theme.elementsColor};\n  box-shadow: ${({ theme }) => theme.boxShadow};\n  cursor: pointer;\n  margin-bottom: 3rem;\n  display: flex;\n  flex-direction: column;\n  width: auto;\n  height: auto;\n  color: ${({ theme }) => theme.textColor};\n  text-decoration: none;\n\n  &:focus,\n  &:hover,\n  &:visited,\n  &:link,\n  &:active {\n    text-decoration: none;\n  }\n\n  @media only screen and (min-width: 768px) {\n    margin-bottom: 0;\n  }\n\n  .imgTest {\n    width: 100%;\n    // height: 200px;\n    border-bottom: ${({ theme }) => theme.borderBottom};\n\n    @media only screen and (min-width: 768px) {\n      height: 200px;\n    }\n  }\n\n  img {\n    width: 100%;\n    height: 100%;\n    // max-height: 100px;\n    border-radius: 10px 10px 0px 0px;\n    //position: relative;\n    //flex: 1;\n    // object-fit: cover;\n    // object-fit: scale-down;\n    @media only screen and (min-width: 768px) {\n      object-fit: cover;\n    }\n  }\n\n  .test {\n    padding: 1rem;\n    // flex-basis: 5rem;\n\n    &:link {\n      text-decoration: none;\n    }\n  }\n`;\n\nexport default CountryCard;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nimport CountryCard from \"./CountryCard\";\n\nfunction CountryCards({ countriesArray, input, select }) {\n  function inputClean(string) {\n    return string[0].toUpperCase() + string.slice(1).toLowerCase();\n  }\n\n  // Don't use index as key!\n  const countries = countriesArray\n    .filter((country) => {\n      if (select) return country.region === select;\n      else return country;\n    })\n    .filter((country) => {\n      if (input) return country.name.includes(inputClean(input));\n      else return country;\n    })\n    .map((country, index) => (\n      <CountryCard\n        key={index}\n        country={country}\n        allCountries={countriesArray}\n      />\n    ));\n\n  return (\n    <StyledSection>{countriesArray.length > 0 && countries}</StyledSection>\n  );\n}\n\nconst StyledSection = styled.section`\n  padding: 2rem 2rem 0 2rem;\n\n  @media only screen and (min-width: 768px) {\n    padding: 3rem 0 0 0;\n    display: grid;\n    grid-template: 1fr / 1fr 1fr 1fr 1fr;\n    grid-gap: 60px;\n  }\n`;\n\nexport default CountryCards;\n","import React, { useState, useEffect } from \"react\";\nimport styled from \"styled-components\";\n\nimport SearchBar from \"./SearchBar\";\nimport FilterByRegion from \"./FilterByRegion\";\nimport CountryCards from \"./CountryCards\";\n\nfunction Main() {\n  const [input, setInput] = useState(\"\");\n\n  function handleChange(event) {\n    const { value } = event.target;\n    setInput(value);\n  }\n\n  //console.log(input);\n\n  const [countriesArray, setCountriesArray] = useState([]);\n\n  // console.log(countriesArray[0]);\n\n  useEffect(() => {\n    fetch(\"https://restcountries.eu/rest/v2/all\")\n      .then((response) => response.json())\n      .then((data) => {\n        setCountriesArray(data);\n      });\n  }, []);\n\n  const [select, setSelect] = useState(\"\");\n\n  function handleFilterRegion(event) {\n    const { value } = event.target;\n    setSelect(value);\n  }\n\n  // console.log(select);\n\n  // Wrap input with a form???\n\n  return (\n    <StyledMain>\n      <StyledFiltersDiv>\n        <SearchBar input={input} handleChange={handleChange} />\n        <FilterByRegion\n          select={select}\n          handleFilterRegion={handleFilterRegion}\n        />\n      </StyledFiltersDiv>\n      <CountryCards\n        countriesArray={countriesArray}\n        input={input}\n        select={select}\n      />\n    </StyledMain>\n  );\n}\n\nconst StyledMain = styled.main`\n  padding: 1rem;\n\n  @media only screen and (min-width: 768px) {\n    padding: 3rem 4rem;\n  }\n`;\n\nconst StyledFiltersDiv = styled.div`\n  display: flex;\n  flex-direction: column;\n\n  @media only screen and (min-width: 768px) {\n    // padding: 4rem;\n    flex-direction: row;\n    justify-content: space-between;\n    align-items: center;\n  }\n`;\n\nexport default Main;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport { Link } from \"react-router-dom\";\nimport { useParams, useLocation } from \"react-router-dom\";\nimport { IoIosArrowRoundBack } from \"react-icons/io\";\n\nfunction Subpage() {\n  // const { countryName } = useParams();\n  const { state } = useLocation();\n  // console.log(countryName);\n  // console.log(state);\n  const [country, countriesArray] = state;\n  // console.log(country);\n  // console.log(country, countriesArray);\n  // console.log(array);\n  //     const thisProduct = productsData.find(prod => prod.id === productId)\n  // cioc\n  const borderCountries = country.borders;\n  //console.log(borderCountries);\n  //console.log(countriesArray);\n\n  let arrayNames = [];\n  countriesArray.map((country) => {\n    const alpha3Code = borderCountries.find(\n      (element) => element === country.alpha3Code\n    );\n    if (alpha3Code) {\n      arrayNames.push(country);\n    }\n    return null;\n  });\n  // console.log(arrayNames);\n\n  const currencies = country.currencies.map((currency) => currency.name);\n  const languages = country.languages.map((language) => language.name);\n  // console.log(languages);\n\n  return (\n    <SubpageSection>\n      <StyledLink role=\"button\" to=\"/\">\n        <IoIosArrowRoundBack size=\"26px\" />\n        Back\n      </StyledLink>\n      <CountryContainer>\n        <div className=\"img\">\n          <img src={country.flag} alt={`${country.name} flag`} />\n        </div>\n        <div className=\"country\">\n          <h2>{country.name}</h2>\n          <div className=\"test\">\n            <div>\n              <p>\n                <span style={{ fontWeight: \"600\" }}>Native name: </span>\n                {country.nativeName}\n              </p>\n              <p>\n                <span style={{ fontWeight: \"600\" }}>Population: </span>\n                {country.population.toLocaleString()}\n              </p>\n              <p>\n                <span style={{ fontWeight: \"600\" }}>Region: </span>\n                {country.region}\n              </p>\n              <p>\n                <span style={{ fontWeight: \"600\" }}>Sub Region: </span>\n                {country.subregion}\n              </p>\n              <p>\n                <span style={{ fontWeight: \"600\" }}>Capital: </span>\n                {country.capital}\n              </p>\n            </div>\n            <div className=\"right\">\n              <br />\n              <p>\n                <span style={{ fontWeight: \"600\" }}>Top Level Domain: </span>\n                {country.topLevelDomain.join(\", \")}\n              </p>\n              <p>\n                <span style={{ fontWeight: \"600\" }}>Currencies: </span>\n                {currencies.join(\", \")}\n              </p>\n              <p>\n                <span style={{ fontWeight: \"600\" }}>Languages: </span>\n                {languages.join(\", \")}\n              </p>\n              <br />\n            </div>\n          </div>\n          <div>\n            <h3>Border Countries</h3>\n            <BorderCountriesDiv>\n              {arrayNames.length > 0\n                ? arrayNames.map((country, index) => (\n                    <StyledLinkBorder\n                      key={index}\n                      role=\"button\"\n                      to={{\n                        pathname: `/country/${country.name}`,\n                        state: [country, countriesArray],\n                      }}\n                    >\n                      {country.name}\n                    </StyledLinkBorder>\n                  ))\n                : \"No bordering countries.\"}\n            </BorderCountriesDiv>\n          </div>\n        </div>\n      </CountryContainer>\n    </SubpageSection>\n  );\n}\n\n/* to={{\n    pathname: `/country/${name}`,\n    state: [country, allCountries],\n  }}*/\n\nconst SubpageSection = styled.section`\n  padding: 3rem 1rem;\n\n  @media only screen and (min-width: 768px) {\n    padding: 3rem 4rem;\n  }\n`;\n\nconst StyledLink = styled(Link)`\n  padding: 0.5rem 1.5rem 0.5rem 2.5rem;\n  text-decoration: none;\n  color: ${({ theme }) => theme.textColor};\n  background: ${({ theme }) => theme.elementsColor};\n  border-radius: 5px;\n  box-shadow: rgba(0, 0, 0, 0.35) 0px 5px 15px;\n  position: relative;\n\n  &:focus,\n  &:hover,\n  &:visited,\n  &:link,\n  &:active {\n    text-decoration: none;\n  }\n\n  svg {\n    position: absolute;\n    top: 5px;\n    left: 10px;\n  }\n`;\n\nconst CountryContainer = styled.div`\n  width: 100%;\n  padding: 2rem 1rem;\n\n  @media only screen and (min-width: 768px) {\n    display: flex;\n    padding: 2rem 0;\n  }\n\n  .img {\n    @media only screen and (min-width: 768px) {\n      width: 40%;\n    }\n  }\n\n  .country {\n    @media only screen and (min-width: 768px) {\n      padding-left: 4rem;\n      display: flex;\n      flex-direction: column;\n    }\n\n    .test {\n      @media only screen and (min-width: 768px) {\n        // padding-left: 4rem;\n        display: flex;\n        flex-direction: row;\n      }\n\n      .right {\n        @media only screen and (min-width: 768px) {\n          padding-left: 4rem;\n        }\n      }\n    }\n  }\n\n  img {\n    width: 100%;\n\n    @media only screen and (min-width: 768px) {\n      width: 100%;\n    }\n  }\n`;\n\nconst BorderCountriesDiv = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n`;\n\nconst StyledLinkBorder = styled(Link)`\n  padding: 0.5rem;\n  text-decoration: none;\n  color: ${({ theme }) => theme.textColor};\n  background: ${({ theme }) => theme.elementsColor};\n  border-radius: 5px;\n  margin: 6px;\n  //box-shadow: rgba(0, 0, 0, 0.35) 0px 5px 15px;\n  //position: relative;\n\n  &:focus,\n  &:hover,\n  &:visited,\n  &:link,\n  &:active {\n    text-decoration: none;\n  }\n`;\n\nexport default Subpage;\n","import React, { useState } from \"react\";\nimport { GlobalStyles } from \"./GlobalStyle.style\";\nimport { ThemeProvider } from \"styled-components\";\nimport { lightTheme, darkTheme } from \"./components/Themes.style\";\nimport { Switch, Route } from \"react-router-dom\";\n\nimport Header from \"./components/Header\";\nimport Main from \"./components/Main\";\nimport Subpage from \"./components/Subpage\";\n\n// Your challenge is to integrate with the [REST Countries API](https://restcountries.eu) to pull country data and display it like in the designs.\n/*\nYour users should be able to:\n\n- See all countries from the API on the homepage\n- Search for a country using an `input` field\n- Filter countries by region\n- Click on a country to see more detailed information on a separate page\n- Click through to the border countries on the detail page\n- Toggle the color scheme between light and dark mode (optional)\n*/\n\nfunction App() {\n  const [theme, setTheme] = useState(\"light\");\n\n  function themeToggler() {\n    return theme === \"light\" ? setTheme(\"dark\") : setTheme(\"light\");\n  }\n\n  // console.log(theme);\n\n  return (\n    <ThemeProvider theme={theme === \"light\" ? lightTheme : darkTheme}>\n      <GlobalStyles />\n      <Header theme={theme} themeToggler={themeToggler} />\n      <Switch>\n        <Route exact path={[\"/\", \"/rest-countries-api\"]}>\n          <Main />\n        </Route>\n        <Route\n          path={[\n            \"/country/:countryName\",\n            \"rest-countries-api/country/:countryName\",\n          ]}\n        >\n          <Subpage />\n        </Route>\n      </Switch>\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\n\nimport App from \"./App\";\n// import reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <Router>\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>\n  </Router>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n"],"sourceRoot":""}